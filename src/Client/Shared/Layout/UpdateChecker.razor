@using Drogecode.Knrm.Oefenrooster.Client.Repositories;
@using Drogecode.Knrm.Oefenrooster.Shared.Models.Configuration;
@code {
    [Inject] private IStringLocalizer<UpdateChecker> L { get; set; } = default!;
    [Inject] ConfigurationRepository _configurationRepository { get; set; } = default!;
    [Inject] ISnackbar Snackbar { get; set; } = default!;
    private UpdateDetails? _updateDetails;
    protected override async Task OnInitializedAsync()
    {
        while (true)
        {
            _updateDetails = await _configurationRepository.NewVersionAvailable();
            if (_updateDetails?.NewVersionAvailable == true)
            {
                var config = (SnackbarOptions options) =>
                {
                    options.DuplicatesBehavior = SnackbarDuplicatesBehavior.Prevent;
                    options.RequireInteraction = true;
                };
                Snackbar.Add(L["Update available"], configure: config, key: "outdated");
            }

            await Task.Delay(1000 * 60);
        }
    }
}
