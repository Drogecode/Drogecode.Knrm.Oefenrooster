@using Drogecode.Knrm.Oefenrooster.Client.Services;
@inherits LayoutComponentBase
@inject CustomStateProvider AuthenticationStateProvider

<AppShell @ref="_appShell" IsDarkMode="_isDarkMode" DarkModeToggle="_darkModeToggle" MyCustomTheme="_myCustomTheme">
    <MudLayout>
        <AuthorizeView>
            <Authorized>
                <AuthorizeView Roles="@AccessesNames.AUTH_basic_access" Context="basic">
                    <Authorized>
                        <TrainingColors IsDarkMode="@_isDarkMode"/>
                        <MudAppBar>
                            <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@(() => DrawerToggle())"/>
                            @L["Title"]
                            <MudSpacer/>
                            <AuthorizeView Roles="@AccessesNames.AUTH_Hide" Context="inner">
                                <MudBadge Color="Color.Secondary" Dot="true" Overlap="true" Visible="_newNotificationsAvailable">
                                    <MudMenu Icon="@Icons.Material.Outlined.Notifications" Color="Color.Inherit" AnchorOrigin="Origin.BottomLeft" TransformOrigin="Origin.TopCenter"
                                             PopoverClass="docs-layout-menu-shadow" ListClass="pa-2 docs-menu-list" LockScroll="true">
                                        <div class="d-flex justify-space-between align-center px-2">
                                            <MudText Typo="Typo.subtitle2">Notifications</MudText>
                                            <MudButton Disabled="@(_newNotificationsAvailable == false)" StartIcon="@Icons.Material.Filled.DoneAll" Variant="Variant.Text" Color="Color.Primary"
                                                       Class="ml-16 mr-n2">
                                                @L["Mark as read"]
                                            </MudButton>
                                        </div>
                                        @if (_messages != null && _newNotificationsAvailable)
                                        {
                                            @foreach (var (message, isRead) in _messages.Take(5))
                                            {
                                                <MudMenuItem Class="px-2 py-0 rounded-sm" Href="@($"/mud/announcements/{message.Id}")">
                                                    <MudText Typo="Typo.subtitle2">@message.Title</MudText>
                                                    <MudText Typo="Typo.body2">@($"{message.Authors.FirstOrDefault()?.DisplayName} • {message.PublishDate.ToString("MM/dd/yyyy")}")</MudText>
                                                </MudMenuItem>
                                                <MudDivider Class="my-2"/>
                                            }
                                        }
                                        else
                                        {
                                            <div class="d-flex justify-center align-center px-2 py-8 relative">
                                                <MudText Class="mud-text-secondary my-12">Nothing new :(</MudText>
                                            </div>
                                        }
                                    </MudMenu>
                                </MudBadge>
                            </AuthorizeView>
                            <MudMenu Icon="@Icons.Material.Filled.Settings" Color="Color.Inherit" AnchorOrigin="@Origin.BottomLeft" TransformOrigin="@Origin.TopLeft"
                                     AriaLabel="@L["User menu dropdown"]" data-testid="top-menu-settings">
                                <MudMenuItem Href="/user/settings" data-testid="user-settings">@L["Settings"]</MudMenuItem>
                                <MudMenuItem Href="/authentication/logout" data-testid="user-logout">@L["Logout"]</MudMenuItem>
                            </MudMenu>
                            <Theming Global="_global" MudThemeProvider="_appShell.MudThemeProvider" @bind-IsDarkMode="_isDarkMode" @bind-DarkModeToggle="_darkModeToggle"/>
                        </MudAppBar>
                        <CascadingValue Value="_global">
                            <MudDrawer @bind-Open="@_drawerOpen">
                                <NavMenu/>
                            </MudDrawer>
                            <MudMainContent>
                                <CascadingValue Value="this">
                                    <div Elevation="0" class="m-3">
                                        @Body
                                    </div>
                                    <AuthorizeView Roles="@AccessesNames.AUTH_show_c_footer" Context="inner">
                                        <footer class="fixed bottom-0">
                                            <span class="text-sm text-gray-500 sm:text-center dark:text-gray-400">
                                                © 2022-2025 Taco Droogers - @DefaultSettingsHelper.CURRENT_VERSION
                                            </span>
                                        </footer>
                                    </AuthorizeView>
                                    <UpdateChecker/>
                                </CascadingValue>
                            </MudMainContent>
                        </CascadingValue>
                    </Authorized>
                    <NotAuthorized>
                        <MudMainContent>
                            <MudContainer Class="mt-16" MaxWidth="MaxWidth.Medium">
                                <MudText Typo="Typo.h3" Align="Align.Center" GutterBottom="true">@L["No access"]</MudText>
                                <MudButton @onclick="Logout">@L["Logout"]</MudButton>
                            </MudContainer>
                        </MudMainContent>
                    </NotAuthorized>
                </AuthorizeView>
            </Authorized>
            <Authorizing>
                <MudMainContent>
                    <MudContainer Class="mt-16" MaxWidth="MaxWidth.Medium">
                        <MudText Typo="Typo.h3" Align="Align.Center" GutterBottom="true">@L["One moment"]</MudText>
                    </MudContainer>
                </MudMainContent>
            </Authorizing>
            <NotAuthorized>
                <MudMainContent>
                    <MudContainer Class="mt-16" MaxWidth="MaxWidth.Medium">
                        <MudText Typo="Typo.h3" Align="Align.Center" GutterBottom="true">@L["Not authorized"]</MudText>
                        @* <MudButton @onclick="Login">@L["Login"]</MudButton> *@
                    </MudContainer>
                </MudMainContent>
            </NotAuthorized>
        </AuthorizeView>
    </MudLayout>
</AppShell>