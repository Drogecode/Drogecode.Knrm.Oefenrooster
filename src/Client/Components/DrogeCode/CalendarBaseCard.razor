@using Drogecode.Knrm.Oefenrooster.Client.Repositories;
@using Drogecode.Knrm.Oefenrooster.Shared.Models.Schedule
@using Drogecode.Knrm.Oefenrooster.Shared.Enums;
<MudPaper Width="@Width" Elevation="0">
    <MudCard @onclick="()=>OnClickCallback.InvokeAsync()">
        <MudCardHeader Class="@($"trainingType-{Training.RoosterTrainingTypeId}")">
            <CardHeaderContent>
                @if (ReplaceEmtyName && string.IsNullOrEmpty(Training.Name))
                {
                    <MudText Typo="Typo.h6">@Training.DateStart.ToLocalTime().ToString("dddd")</MudText>
                }
                else
                {
                    <MudText Typo="Typo.h6" Class="break-words">@Training.Name</MudText>
                }
            </CardHeaderContent>
            <CardHeaderActions>
                @if (_iconCount == 1 || _showAllIcons)
                {
                    @switch (SetBy)
                    {
                        case AvailabilitySetBy.DefaultAvailable:
                            <MudIcon Icon="@Icons.Material.Filled.AutoGraph" />
                            break;
                        case AvailabilitySetBy.Holiday:
                            <MudIcon Icon="@Icons.Material.Filled.WbSunny" />
                            break;
                    }
                    @if (OnClickHistory.HasDelegate)
                    {
                        <MudIconButton Class="DrogeCode-card-header-history" Icon="@Icons.Material.Filled.History" Color="Color.Default" OnClick="()=>OnClickHistory.InvokeAsync()" />
                    }
                    @if (OnClickSettings.HasDelegate)
                    {
                        <MudIconButton Class="DrogeCode-card-header-settings" Icon="@Icons.Material.Filled.Settings" Color="Color.Default" OnClick="()=>OnClickSettings.InvokeAsync()" />
                    }
                }
                else if (_iconCount > 1)
                {
                    <MudIconButton Class="DrogeCode-card-header-more-icons" Icon="@Icons.Material.Filled.MoreVert" Color="Color.Default" OnClick="()=>_showAllIcons = true" />
                }
            </CardHeaderActions>
        </MudCardHeader>
        <MudCardContent Class="@ContentClass">
            @if (ShowDayOfWeek)
            {
                <MudText Typo="Typo.subtitle2">@Training.DateStart.ToLocalTime().ToString("dddd")</MudText>
            }
            @if (ShowDate)
            {
                <MudText Typo="Typo.subtitle2">@Training.DateStart.ToString(DateTime.Today.Year == Training.DateStart.Year ? "MMM dd" : "yyyy MMM dd")</MudText>
            }
            @if (Training.ShowTime != false)
            {
                <MudText Typo="Typo.body2">@Training.DateStart.ToLocalTime().ToString("HH:mm") @LApp["till"] @Training.DateEnd.ToLocalTime().ToString("HH:mm")</MudText>
            }
            @if (ChildContent != null)
            {
                @ChildContent
            }
        </MudCardContent>
    </MudCard>
</MudPaper>
