@using Drogecode.Knrm.Oefenrooster.Shared.Enums;
@using Drogecode.Knrm.Oefenrooster.Shared.Models.DefaultSchedule;
@if (_defaultSchedules is not null)
{
    <MudDataGrid Items="@_defaultSchedules" Striped="true" Hover="true">
        <Columns>
            <HierarchyColumn T="DefaultSchedule"/>
            <PropertyColumn Property="x => x.Name" Title="@L["Name"]" CellClassFunc="@(x=>$"trainingType-{x.RoosterTrainingTypeId}")" />
            <PropertyColumn Property="x => x.WeekDay" Title="@L["Weekday"]">
                <CellTemplate>
                    @LApp[context.Item.WeekDay.ToString() ?? "None"]
                </CellTemplate>
            </PropertyColumn>
            <TemplateColumn Title="@L["TimeStart"]">
                <CellTemplate>
                    @if (context.Item.ShowTime)
                    {
                        <p>@context.Item.TimeStart</p>
                    }
                </CellTemplate>
            </TemplateColumn>
            <TemplateColumn Title="@L["TimeEnd"]">
                <CellTemplate>
                    @if (context.Item.ShowTime)
                    {
                        <p>@context.Item.TimeEnd</p>
                    }
                </CellTemplate>
            </TemplateColumn>
            <TemplateColumn Title="@L["Current setting"]">
                <CellTemplate>
                    @{
                        DefaultUserSchedule userSchedule = context.Item.UserSchedules?.FirstOrDefault() ?? new DefaultUserSchedule();
                    }
                    @LApp[userSchedule?.Availability.ToString() ?? "None"]
                </CellTemplate>
            </TemplateColumn>
        </Columns>
        <ChildRowContent>
            @{
                bool isNew = false;
                DefaultUserSchedule? userSchedule = context.Item.UserSchedules?.FirstOrDefault();
                if (userSchedule is null)
                {
                    userSchedule = new DefaultUserSchedule();
                    isNew = true;
                }
            }
            <MudCard>
                <MudCardHeader>
                    <CardHeaderContent>
                        <MudText Typo="Typo.h6">@L["Configure your default availabilty here"]</MudText>
                    </CardHeaderContent>
                </MudCardHeader>
                <MudCardContent>
                    <MudSelect T="Availability?" Variant="Variant.Text" Value="userSchedule.Availability" ValueChanged="async (e) => await OnChange(e, userSchedule, context.Item.Id, isNew)" AdornmentColor="@PlannerHelper.ColorAvailabilty(userSchedule?.Availability)">
                        <MudSelectItem T="Availability?" Value="Availability.None">@LApp["None"]</MudSelectItem>
                        <MudSelectItem T="Availability?" Value="Availability.Available">@LApp["Available"]</MudSelectItem>
                        <MudSelectItem T="Availability?" Value="Availability.NotAvailable">@LApp["NotAvailable"]</MudSelectItem>
                        <MudSelectItem T="Availability?" Value="Availability.Maybe">@LApp["Maybe"]</MudSelectItem>
                    </MudSelect>
                </MudCardContent>
            </MudCard>
        </ChildRowContent>
    </MudDataGrid>
}
else
{
    <MudSkeleton/>
    <MudSkeleton/>
    <MudSkeleton/>
    <MudSkeleton/>
}