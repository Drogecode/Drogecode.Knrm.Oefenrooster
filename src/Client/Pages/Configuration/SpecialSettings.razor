@page "/configuration/global"
@attribute [Authorize(Roles = AccessesNames.AUTH_Taco)]
<h3>Global configuration</h3>

<MudText>Alleen Taco mag op deze knop klikken</MudText>
<MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="UpdateDatabase">@L["Update database"]</MudButton>
@if (_clickedUpdate == true)
{
    <MudText Typo="Typo.body1">Database updated!</MudText>
}
else if (_clickedUpdate == false)
{
    <MudText Typo="Typo.body1">Something went wrong, while updating database :')</MudText>
}

<MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="AddUser">Voeg test user toe</MudButton>
<MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="SyncUsers">Sync users</MudButton>
@if (_usersSynced == true)
{
    <MudText Typo="Typo.body1">users synced</MudText>
}
else if (_usersSynced == false)
{
    <MudText Typo="Typo.body1">Something went wrong while syncing users :')</MudText>
}
<MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="UpdateSpecialDates">Update special dates</MudButton>
@if (_specialDatesUpdated == true)
{
    <MudText Typo="Typo.body1">special dates bijgewerkt</MudText>
}
else if (_specialDatesUpdated == false)
{
    <MudText Typo="Typo.body1">Something went wrong while updating special dates :')</MudText>
}
<MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="RunDbCorrection">Run db correction</MudButton>
@if (_dbCorrection1 == true)
{
<MudText Typo="Typo.body1">db correction done</MudText>
}
else if (_dbCorrection1 == false)
{
<MudText Typo="Typo.body1">db correction failed or did run before</MudText>
}

@if (_settingTrainingToCalendar is not null)
{
    <MudSwitch Label="setting training to calendar" Color="Color.Primary" T="bool" Value="@_settingTrainingToCalendar.Value" ValueChanged="@(async (isChecked) => await PatchTrainingToCalendar(isChecked))"/>
}

@if (_users != null && _functions != null)
{
    <AuthorizeView Roles="@AccessesNames.AUTH_Taco">
        <MudPaper>
            <MudList Clickable="false">
                <MudText>zeven meest recente logins maximaal 7 dagen geleden</MudText>
                @foreach (var user in _users.Where(x => x.LastLogin >= DateTime.Today.AddDays(-7)).OrderByDescending(x => x.LastLogin).Take(7))
                {
                    <MudListItem>
                        <div class="flex space-x-4">
                            <p>@user.Name</p>
                            <DateToString ShowDate="true" ShowTime="true" DateTimeUtc="user.LastLogin"/>
                            <p class="text-gray-400/25">@user.Versions</p>
                        </div>
                    </MudListItem>
                }
            </MudList>
        </MudPaper>
    </AuthorizeView>
    <MudPaper>
        <MudList Clickable="false">
            @foreach (var function in _functions.OrderBy(x => x.Order))
            {
                @if (_users.Any(x => x.UserFunctionId == function.Id))
                {
                    <MudText>@function.Name</MudText>
                    @foreach (var user in _users.Where(x => x.UserFunctionId == function.Id).OrderBy(x => x.Name))
                    {
                        <MudListItem OnClick="() => ChangeUser(user)">
                            <div class="flex space-x-4">
                                <p>@user.Name</p>
                                <DateToString ShowDate="true" ShowTime="true" DateTimeUtc="user.LastLogin"/>
                                <p class="text-gray-400/25">@user.Versions</p>
                            </div>
                        </MudListItem>
                    }
                }
            }
        </MudList>
    </MudPaper>
}