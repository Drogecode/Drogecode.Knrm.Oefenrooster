@page "/planner/calendar"
@attribute [Authorize]
@using Drogecode.Knrm.Oefenrooster.Client.Models.CalendarItems;
@using Drogecode.Knrm.Oefenrooster.Client.Pages.Planner.Components
<PageTitle>@LApp["Availability"]</PageTitle>

@if (_monthItems != null)
{
    @foreach (var item in _monthItems.OrderBy(x => x.Order))
    {
        <MudAlert Severity="@item.Severity" Variant="Variant.Filled">@item.Text</MudAlert>
    }
}
@if (_initialized)
{
    <div class="d-none d-md-flex">
        <MudCalendar Items="_events" MonthCellMinHeight="100" DateRangeChanged="SetCalenderForMonth" Outlined ButtonVariant="Variant.Text" ShowDay="false" ShowWeek="false" CurrentDay="@_firstMonth"
                     ShowTodayButton="true">
            <CellTemplate>
                @if (context is DrogeCodeCalendarItem)
                {
                    var training = ((DrogeCodeCalendarItem)context).Training;
                    @if (training != null)
                    {
                        <div class="m-2">
                            <CalendarCard Training="training"/>
                        </div>
                    }
                }
                else if (context is RoosterItemDayCalendarItem)
                {
                    var dayItem = ((RoosterItemDayCalendarItem)context).ItemDay;
                    if (dayItem is not null)
                    {
                        var color = DayItemHelper.DayItemTypeColor(dayItem.Type);
                        <div style="width: 100%; height: 100%; border: 2px solid @DayItemHelper.GetColor(color)">
                            <div style="background-color: @DayItemHelper.GetColor(color)">
                                <MudText Style="color: #ffffff;" Typo="Typo.body1" Align="Align.Center">@dayItem.Text</MudText>
                            </div>
                        </div>
                    }
                }
            </CellTemplate>
        </MudCalendar>
    </div>
    <div class="d-md-none">
        <MonthSelector Month="_month" MonthChanged="SetMonth" CurrentMonth="_currentMonth"/>
        <MudPaper Elevation="0" Class="flex align-content-start flex-wrap flex-grow-1 gap-4 mx-2 my-4">
            @if (_events == null || _month == null)
            {
                <DrogeLoading/>
            }
            else
            {
                @foreach (var ev in _events.Where(x =>
                                      x.Start.Month == _month.Value.Month &&
                                      x.Start.Year == _month.Value.Year &&
                                      ((x.End.Equals(DateTime.MinValue) && x.Start >= DateTime.Today) || x.End >= DateTime.Today))
                                  .OrderBy(x => x.Start))
                {
                    <div class="flex-1">
                        @if (ev is DrogeCodeCalendarItem)
                        {
                            var training = ((DrogeCodeCalendarItem)ev).Training;
                            @if (training != null)
                            {
                                <CalendarCard MinWidth="300px" MaxWidth="600px" Training="training" ShowDate="true" ShowDayOfWeek="true"/>
                            }
                        }
                        else if (ev is RoosterItemDayCalendarItem)
                        {
                            var dayItem = ((RoosterItemDayCalendarItem)ev).ItemDay;
                            @if (dayItem != null)
                            {
                                var color = DayItemHelper.DayItemTypeColor(dayItem.Type);
                                <div class="flex gap-1" style="min-width:300px;max-width:600px;">
                                    <MudIcon Icon="@Icons.Material.Filled.Circle" Color="@color" Size="Size.Small"/>
                                    <div>@dayItem.Text - @dayItem.DateStart!.Value.ToString("dddd dd MMM")</div>
                                </div>
                            }
                        }
                    </div>
                }
            }
        </MudPaper>
    </div>
}
else
{
    <DrogeLoading/>
}