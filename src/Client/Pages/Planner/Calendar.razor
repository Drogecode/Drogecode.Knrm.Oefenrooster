@page "/planner/calendar"
@attribute [Authorize]
@using Drogecode.Knrm.Oefenrooster.Client.Pages.Planner.Components
@using Drogecode.Knrm.Oefenrooster.Client.Repositories;
@using Drogecode.Knrm.Oefenrooster.Shared.Enums;
@using Drogecode.Knrm.Oefenrooster.Shared.Models.CalendarItem;
@using Drogecode.Knrm.Oefenrooster.Shared.Models.Schedule;
@using MudBlazor.Extensions;
@using MudBlazor;
<PageTitle>Kalender</PageTitle>

@if (_monthItems != null)
{
    @foreach (var item in _monthItems.OrderBy(x => x.Order))
    {
        <MudAlert Severity="@item.Severity" Variant="Variant.Filled">@item.Text</MudAlert>
    }
}
<div class="d-none d-md-flex">
    <MudCalendar Items="_events" MonthCellMinHeight="100" DateRangeChanged="SetCalenderForMonth" Outlined ButtonVariant="Variant.Text" ShowDay=false ShowWeek=false CurrentDay="_month ?? DateTime.Today">
        <CellTemplate>
            @if (context is DrogeCodeCalendarItem)
            {
                var training = ((DrogeCodeCalendarItem)context).Training;
                @if (training != null)
                {
                    <CalendarCard Training="training" />
                }
            }
            else if (context is RoosterItemDayCalendarItem)
            {
                var dayItem = ((RoosterItemDayCalendarItem)context).ItemDay;
                @if (dayItem != null)
                {
                    <div class="d-flex gap-1">
                        <MudIcon Icon="@Icons.Material.Filled.Circle" Color="Color.Secondary" Size="Size.Small" />
                        <div>@dayItem.Text</div>
                    </div>
                }
            }
        </CellTemplate>
    </MudCalendar>
</div>
<div class="d-md-none">
    <MonthSelector Month="_month" MonthChanged="SetMonth" />
    <MudPaper Elevation="0" Class="d-flex align-content-start flex-wrap flex-grow-1 gap-4 mx-2 my-4">
        @if (_events == null || _month == null)
        {
            <MudSkeleton />
            <MudSkeleton />
            <MudSkeleton />
            <MudSkeleton />
        }
        else
        {
            @foreach (var ev in _events.Where(x => x.Start.Month == _month.Value.Month && x.Start.Year == _month.Value.Year).OrderBy(x => x.Start))
            {
                @if (ev is DrogeCodeCalendarItem)
                {
                    var training = ((DrogeCodeCalendarItem)ev).Training;
                    @if (training != null)
                    {
                        <CalendarCard Width="200px" Training="training" ShowDate="true" ShowDayOfWeek="true" />
                    }
                }
                else if (ev is RoosterItemDayCalendarItem)
                {
                    var dayItem = ((RoosterItemDayCalendarItem)ev).ItemDay;
                    @if (dayItem != null)
                    {
                        <div class="d-flex gap-1">
                            <MudIcon Icon="@Icons.Material.Filled.Circle" Color="Color.Secondary" Size="Size.Small" />
                            <div>@dayItem.Text - @dayItem.DateStart.ToString("dddd dd MMM")</div>
                        </div>
                    }
                }
            }
        }
    </MudPaper>
</div>