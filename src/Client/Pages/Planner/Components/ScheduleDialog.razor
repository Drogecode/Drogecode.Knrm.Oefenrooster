@using Drogecode.Knrm.Oefenrooster.Client.Repositories;
@using Drogecode.Knrm.Oefenrooster.Shared.Enums;
@using Drogecode.Knrm.Oefenrooster.Shared.Models.Schedule
<MudDialog>
    <DialogContent>
        @if (Functions != null && Users != null)
        {
            @foreach (var function in Functions.OrderBy(x => x.Order))
            {
                @if (Users.Any(x => x.UserFunctionId == function.Id) || Planner.PlanUsers.Any(x => x.PlannedFunctionId == function.Id))
                {
                    @foreach (var user in Planner.PlanUsers.Where(x => (x.Availabilty == Oefenrooster.Shared.Enums.Availabilty.Available || x.Assigned) && x.PlannedFunctionId == function.Id))
                    {
                        /* Available user from this function */
                        <MudSwitch T="bool" CheckedChanged="(e)=> CheckChanged(e, user, function.Id)" Label="@user.Name" Color="GetColor(user.Availabilty)" Tag="user" Checked="user.Assigned" /> <br />
                    }
                }
            }

            @foreach (var function in Functions.OrderBy(x => x.Order))
            {
                @if (Users.Any(x => x.UserFunctionId == function.Id) || Planner.PlanUsers.Any(x => x.PlannedFunctionId == function.Id))
                {
                    @foreach (var user in Planner.PlanUsers.Where(x => x.Availabilty != Oefenrooster.Shared.Enums.Availabilty.Available && !x.Assigned && x.PlannedFunctionId == function.Id).OrderBy(o => o.Availabilty))
                    {
                        /* Not available user from this function */
                        <MudSwitch T="bool" CheckedChanged="(e)=> CheckChanged(e, user, function.Id)" Label="@user.Name" Color="GetColor(user.Availabilty)" Tag="user" Checked="user.Assigned" />@LApp[@user.Availabilty.ToString() ?? ""]  @(" - (") @Functions.FirstOrDefault(x=>x.Id == user.UserFunctionId)?.Name @(")") <br />
                    }
                    @foreach (var user in Users.Where(x => x.UserFunctionId == function.Id))
                    {
                        /* Users who have not set an availability from this function */
                        @if (Planner.PlanUsers.Any(x => x.UserId == user.Id)) continue;
                        <MudSwitch T="bool" CheckedChanged="(e)=> CheckChanged(e, user, function.Id)" Label="@user.Name" Tag="@user" /> <br />
                    }
                }
            }
        }
    </DialogContent>
    <DialogActions>
        @*<MudButton OnClick="Cancel">Cancel</MudButton>*@
        <MudButton Color="Color.Primary" OnClick="Submit">Ok</MudButton>
    </DialogActions>
</MudDialog>

