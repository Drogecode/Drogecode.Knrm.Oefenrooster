@using Drogecode.Knrm.Oefenrooster.Shared.Enums;
@using Drogecode.Knrm.Oefenrooster.Shared.Models.User;
<div>
    <MonthSelector Month="_month" MonthChanged="SetMonth" />
    @if (Users != null)
    {
        <MudTable Hover="true" Breakpoint="Breakpoint.None"
                  Items="@Users.OrderBy(x => Functions?.FirstOrDefault(y => y.Id == x.UserFunctionId)?.Order).ThenBy(x=>x.Name)"
                  GroupBy="@_groupBy"
                  GroupHeaderStyle="background-color:var(--mud-palette-background-grey)"
                  GroupFooterClass="mb-4"
                  FixedHeader="true"
                  Height=" calc(100vh - 136px)"
                  Dense="true"
                  Bordered="true">
            <HeaderContent>
                <MudTh Class="!z-20">@L["Buddy"]</MudTh>
                <MudTh Class="!z-20">@L["Nr"]</MudTh>
                <MudTh Class="!z-20">@L["Name"]</MudTh>
                @foreach (var item in _events)
                {
                    <MudTh Class="@($"trainingType-{item.RoosterTrainingTypeId} !z-20")">
                        @item.DateStart.ToString("dddd")
                        <DateToString ShowDate="true" ShowTime="@item.ShowTime" DateTimeUtc="item.DateStart" /> @item.Name
                    </MudTh>
                }
            </HeaderContent>
            <GroupHeaderTemplate>
                <MudTh Class="mud-table-cell-custom-group DrogeCode-sticky-column z-10" colspan="5">
                    @($"{Functions?.FirstOrDefault(y => y.Id == (Guid)context.Key)?.Name ?? L["Unknown"]}")
                </MudTh>
            </GroupHeaderTemplate>
            <RowTemplate>
                <MudTd DataLabel="@L["Buddy"]">@context.Buddy</MudTd>
                <MudTd DataLabel="@L["Nr"]">@context.Nr</MudTd>
                <MudTd Class="DrogeCode-sticky-column z-10" DataLabel="@L["Name"]">@context.Name</MudTd>
                @foreach (var item in _events)
                {
                    var user = item.PlanUsers.FirstOrDefault(x => x.UserId == @context.Id);
                    <MudTd Class="@PlannerHelper.StyleAvailabilty(user?.Availability)" DataLabel="@L["Name"]" @onclick="()=>Click(user, item)">
                        @switch (user?.SetBy)
                        {
                            case AvailabilitySetBy.DefaultAvailable:
                                <MudIcon Icon="@Icons.Material.Filled.AutoGraph" Class="opacity-75 text-base" />
                                break;
                            case AvailabilitySetBy.Holiday:
                                <MudIcon Icon="@Icons.Material.Filled.WbSunny" Class="opacity-75 text-base" />
                                break;
                        }
                        @if (user?.Assigned == true)
                        {
                            @(Vehicles?.FirstOrDefault(x => x.Id == user.VehicleId)?.Code ?? Vehicles?.FirstOrDefault(x => x.IsDefault)?.Code ?? L["Assigned"])
                            if (user.PlannedFunctionId.Equals( DefaultSettingsHelper.KompasLeiderId))
                            {
                                <MudIcon Icon="@Icons.Material.Filled.HowToReg" Color="Color.Info" Style="font-size:1rem;" />
                            }
                        }
                    </MudTd>
                }
            </RowTemplate>
        </MudTable>
    }
</div>
@code {
    TableGroupDefinition<DrogeUser> _groupBy = new()
        {
            GroupName = "Group",
            Indentation = false,
            Expandable = true,
            IsInitiallyExpanded = true,
            Selector = (e) => e.UserFunctionId
        };
}