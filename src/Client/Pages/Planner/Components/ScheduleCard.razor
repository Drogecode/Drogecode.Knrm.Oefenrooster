@using Drogecode.Knrm.Oefenrooster.Client.Pages.Planner.Components
@using Drogecode.Knrm.Oefenrooster.Client.Repositories;
@using Drogecode.Knrm.Oefenrooster.Shared.Models.Schedule
@using Drogecode.Knrm.Oefenrooster.Shared.Enums;
@if (!_isDeleted)
{
    @if (Functions is not null && Vehicles is not null && Planner.PlanUsers?.Any(x => x.Assigned) == true)
    {
        <CalendarBaseCard ReplaceEmptyName="@ReplaceEmptyName" Width="@Width" MaxWidth="@MaxWidth" MinWidth="@MinWidth" Training="@Planner" OnClickCallback="@OpenScheduleDialog" OnClickSettings="@OpenConfigDialog" OnClickHistory="_showHistory ? OpenHistoryDialog : null!" ShowDate="@ShowDate" ShowDayOfWeek="@ShowDayOfWeek" ShowPastBody="@ShowPastBody" MoreMessage="@L["Show attendees"]">
            @if (ChildContent is not null)
            {
                @ChildContent
            }
            <MudList T="string">
                @foreach (var vehicle in Vehicles.Where(x => Planner.PlanUsers.Any(y => y.VehicleId == x.Id) == true || (x.IsDefault && Planner.PlanUsers.Any(y => y.VehicleId == null) == true)))
                {
                    @if (Functions.Any(f => f.Active) && (Planner.PlanUsers.Any(x => x.Assigned && (x.VehicleId == vehicle.Id || (vehicle.IsDefault && x.VehicleId == null))) == true))
                    {
                        <MudText Typo="Typo.subtitle2">@vehicle.Name</MudText>
                    }
                    @foreach (var function in Functions.Where(x => x.Active).OrderBy(x => x.Order))
                    {
                        @if (Planner.PlanUsers.Any(x => x.Assigned && x.PlannedFunctionId == function.Id && (x.VehicleId == vehicle.Id || (vehicle.IsDefault && x.VehicleId == null))) == true)
                        {
                            @foreach (var assignedUser in Planner.PlanUsers.Where(x => x.Assigned && x.PlannedFunctionId == function.Id && (x.VehicleId == vehicle.Id || (vehicle.IsDefault && x.VehicleId == null))))
                            {
                                <MudListItem T="string" OnClick="@OpenScheduleDialog">@assignedUser.Name@(assignedUser.PlannedFunctionId != assignedUser.UserFunctionId ? $" - {LApp["As"]} {function.Name}" : "")</MudListItem>
                            }
                        }
                    }
                }
            </MudList>
        </CalendarBaseCard>
    }
    else
    {
        <CalendarBaseCard ReplaceEmptyName="@ReplaceEmptyName" Width="@Width" MaxWidth="@MaxWidth" MinWidth="@MinWidth" Training="@Planner" OnClickCallback="OpenScheduleDialog" OnClickSettings="OpenConfigDialog" OnClickHistory="_showHistory ? OpenHistoryDialog : null!" ShowDate="@ShowDate" ShowDayOfWeek="@ShowDayOfWeek" ShowPastBody="ShowPastBody" MoreMessage="@L["Show attendees"]" />
    }
}
