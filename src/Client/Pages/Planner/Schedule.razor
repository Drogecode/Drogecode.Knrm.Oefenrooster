@page "/planner/schedule"
@attribute [Authorize]
@using Drogecode.Knrm.Oefenrooster.Client.Pages.Planner.Components
@using Drogecode.Knrm.Oefenrooster.Client.Repositories;
@using Drogecode.Knrm.Oefenrooster.Shared.Models.Schedule;

<MudCalendar Items="_events" MonthCellMinHeight="100" DateRangeChanged="SetCalenderForMonth" Outlined ButtonVariant="Variant.Text" ShowDay=false ShowWeek=false>
    <CellTemplate>
        @{
            var training = ((CustomItem)context).Training;
        }
        @if (training != null)
        {
            <ScheduleCard Planner="training" Users="_users" Functions="_functions" Vehicles="_vehicles" />
            @*<div style="width: 100%; border: 2px solid @(((CustomItem)context).Color)">
                <div style="background-color: @(((CustomItem)context).Color)" class="min-h-[1.25rem]">
                    <MudText Style="color: #ffffff;" Typo="Typo.body1" Align="Align.Center">
                        @(training.Name)
                    </MudText>
                </div>
                <MudText Typo="Typo.body2">@context.Start.ToString("HH:mm") @LApp["till"] @context.End!.Value.ToString("HH:mm")</MudText>
                @if (_functions != null && _users != null)
                {
                    @foreach (var function in _functions.OrderBy(x => x.Order))
                    {
                        @if (training.PlanUsers.Any(x => x.PlannedFunctionId == function.Id))
                        {
                            <br />
                            @foreach (var assignedUser in training.PlanUsers.Where(x => x.Assigned && x.PlannedFunctionId == function.Id))
                            {
                                <MudText>@assignedUser.Name</MudText>
                            }
                        }
                    }
                }
            </div>*@
        }
    </CellTemplate>
</MudCalendar>