@using Drogecode.Knrm.Oefenrooster.Shared.Models.SharePoint;
@using System.Text.RegularExpressions;
@using Drogecode.Knrm.Oefenrooster.Client.Extensions
@using System.Web;
@if (_sharePointTrainings != null)
{
    <MudText Typo="Typo.h5">@L["Trainings from SharePoint"]</MudText>
    <SelectMultipleUsers Users="@Users" Functions="@Functions" Selection="@_selectedUsersTraining" SelectionChanged="OnSelectionChanged" MultiSelection="_multiSelection"/>
    @if (_sharePointTrainings?.SharePointTrainings?.Count() > 0)
    {
        <MudDataGrid Items="@_sharePointTrainings.SharePointTrainings"
                     ReadOnly="true" EditMode="@DataGridEditMode.Cell">
            <Columns>
                <HierarchyColumn T="SharePointTraining"/>
                <TemplateColumn Title="@L["Start"]">
                    <CellTemplate>
                        @if (_trainingDifferentStart.Contains(context.Item?.Type ?? string.Empty))
                        {
                            <p>@context.Item?.Commencement.ToNiceString(LDateToString)</p>
                        }
                        else
                        {
                            <p>@context.Item?.Start.ToNiceString(LDateToString)</p>
                        }
                    </CellTemplate>
                </TemplateColumn>
                <PropertyColumn Property="x => x.Title" Title="@L["Description"]"/>
            </Columns>
            <ChildRowContent>
                <MudCard>
                    <MudCardHeader>
                        <CardHeaderContent>
                            <MudText Typo="Typo.h6">@context.Item.Title</MudText>
                        </CardHeaderContent>
                    </MudCardHeader>
                    <MudCardContent>
                        <MudMarkdown Value="@context.Item.Description"/>
                        <MudList>
                            @foreach (var user in context.Item.Users)
                            {
                                <MudListItem>@user.Name - @user.Role</MudListItem>
                            }
                        </MudList>
                        @if (_isTaco) /*Work in progress*/
                        {
                            var differentStart = _trainingDifferentStart.Contains(context.Item?.Type ?? string.Empty);
                            var start = differentStart ? context.Item.Commencement : context.Item.Start;
                            <MudText Typo="Typo.h6">@L["Times"]</MudText>
                            <MudList>
                                <MudListItem>
                                    @($"{L["Start"]} - {start.ToNiceString(LDateToString)}")
                                </MudListItem>
                                @if (!differentStart)
                                {
                                    <MudListItem>
                                        @($"{L["Commencement"]} - {context.Item.Commencement.ToNiceString(LDateToString, showDate: context.Item.Start.Date != context.Item.Commencement.Date)}") - @((context.Item.Commencement - start).TotalMinutes) @L["minutes"]
                                    </MudListItem>
                                }
                                <MudListItem>
                                    @($"{L["End"]} - {context.Item.End.ToNiceString(LDateToString, showDate: context.Item.Commencement.Date != context.Item.End.Date)}") - @((context.Item.End - start).TotalMinutes) @L["minutes"]
                                </MudListItem>
                            </MudList>
                            <MudText Typo="Typo.h6">@L["Miscellaneous"]</MudText>
                            <MudList>
                                <MudListItem>@L["Boat"]: @context.Item.Boat</MudListItem>
                                <MudListItem>@L["Type"]: @context.Item.Type</MudListItem>
                            </MudList>
                        }
                    </MudCardContent>
                </MudCard>
            </ChildRowContent>
        </MudDataGrid>
        @if (_sharePointTrainings.TotalCount > _count)
        {
            <MudPagination Disabled="_busy" ShowFirstButton="true" ShowLastButton="true" MiddleCount="5" Count="@(Convert.ToInt32(Math.Ceiling((double)_sharePointTrainings.TotalCount / (double)_count)))" Selected="_currentPage" SelectedChanged="Next" Class="mt-4"/>
        }
    }
}
else
{
    <MudSkeleton/>
    <MudSkeleton/>
    <MudSkeleton/>
    <MudSkeleton/>
}