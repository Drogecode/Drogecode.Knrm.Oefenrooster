@using Drogecode.Knrm.Oefenrooster.Shared.Models.SharePoint;
@using Drogecode.Knrm.Oefenrooster.Client.Extensions
@if (_reportActions?.Actions is not null)
{
    <AuthorizeView Roles="@AccessesNames.AUTH_Taco">
        @_reportActions.ElapsedMilliseconds
    </AuthorizeView>
    <MudText Typo="Typo.h5">@L["Actions from SharePoint"]</MudText>
    <SelectMultipleUsers Users="@Users" Functions="@Functions" Selection="@_selectedUsersAction" SelectionChanged="OnSelectionChanged" MultiSelection="_multiSelection"/>
    @if (_reportActions?.Actions?.Count() > 0)
    {
        <MudDataGrid Items="@_reportActions.Actions" ReadOnly="true" Filterable="false" SortMode="@SortMode.None">
            <Columns>
                <HierarchyColumn T="DrogeAction"/>
                <PropertyColumn Property="x => x.Number" Title="Nr"/>
                <TemplateColumn Title="@L["Start"]">
                    <CellTemplate>
                        <p>@context.Item?.Start.ToNiceString(LDateToString)</p>
                    </CellTemplate>
                </TemplateColumn>
                <PropertyColumn Property="x => x.ShortDescription" Title="@L["Description"]"/>
                <PropertyColumn Property="x => x.Prio" Title="@L["Prio"]"/>
            </Columns>
            <ChildRowContent>
                <MudCard>
                    <MudCardHeader>
                        <CardHeaderContent>
                            <MudText Typo="Typo.h6">@context.Item.Title</MudText>
                        </CardHeaderContent>
                    </MudCardHeader>
                    <MudCardContent>
                        <MudMarkdown Value="@context.Item.Description"/>
                        <MudText Typo="Typo.h6">@L["Crew"]</MudText>
                        <MudList>
                            @{ var users = context.Item.Users?.OrderBy(x => x.Order).ToList() ?? new List<SharePointUser>(); }
                            @foreach (var user in users)
                            {
                                <MudListItem>@user.Name - @user.Role</MudListItem>
                            }
                        </MudList>
                        <MudText Typo="Typo.h6">@L["Times"]</MudText>
                        <MudList>
                            <MudListItem>
                                @($"{L["Start"]} - {context.Item.Start.ToNiceString(LDateToString)}")
                            </MudListItem>
                            <MudListItem>
                                @($"{L["Commencement"]} - {context.Item.Commencement.ToNiceString(LDateToString, showDate: context.Item.Start.Date != context.Item.Commencement.Date)}") - @((context.Item.Commencement - context.Item.Start).TotalMinutes) @L["minutes"]
                            </MudListItem>
                            <MudListItem>
                                @($"{L["Departure"]} - {context.Item.Departure.ToNiceString(LDateToString, showDate: context.Item.Commencement.ToLocalTime().Date != context.Item.Departure.ToLocalTime().Date)}") - @((context.Item.Departure - context.Item.Start).TotalMinutes) @L["minutes"]
                            </MudListItem>
                            <MudListItem>
                                @($"{L["End"]} - {context.Item.End.ToNiceString(LDateToString, showDate: context.Item.Departure.ToLocalTime().Date != context.Item.End.ToLocalTime().Date)}") - @((context.Item.End - context.Item.Start).TotalMinutes) @L["minutes"]
                            </MudListItem>
                        </MudList>
                        <MudText Typo="Typo.h6">@L["Miscellaneous"]</MudText>
                        <MudList>
                            <MudListItem>@L["Boat"]: @context.Item.Boat</MudListItem>
                            <MudListItem>@L["Type"]: @context.Item.Type</MudListItem>
                            <MudListItem>@L["CallMadeBy"]: @context.Item.CallMadeBy</MudListItem>
                            <MudListItem>@L["Causes"]: @context.Item.Causes</MudListItem>
                            <MudListItem>@L["Implications"]: @context.Item.Implications</MudListItem>
                            @if (_isTaco) /*Work in progress*/
                            {
                                <MudListItem>@L["Minutes"]: @context.Item.TotalMinutes</MudListItem>
                                <MudListItem>@L["Hours"]: @context.Item.TotalFullHours</MudListItem>
                            }
                        </MudList>
                    </MudCardContent>
                </MudCard>
            </ChildRowContent>
        </MudDataGrid>
        @if (_reportActions.TotalCount > _count)
        {
            <MudPagination Disabled="_busy" ShowFirstButton="true" ShowLastButton="true" MiddleCount="5" Count="@(Convert.ToInt32(Math.Ceiling((double)_reportActions.TotalCount / (double)_count)))" Selected="_currentPage" SelectedChanged="Next" Class="mt-4"/>
        }
    }
}
else
{
    <MudSkeleton/>
    <MudSkeleton/>
    <MudSkeleton/>
    <MudSkeleton/>
}